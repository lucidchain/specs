name: Create releases

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitHub CLI
        run: |
          sudo apt-get update && sudo apt-get install -y gh

      - name: Generate release notes
        id: releasenotes
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 "$TAG_NAME^" || echo "")

          echo "Generating release notes for tag: $TAG_NAME"
          echo "Previous tag: $PREVIOUS_TAG"

          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log "$TAG_NAME" --no-merges --pretty=format:"%s (%h)" | grep -v '^Revert ')
            COMMIT_HISTORY_LINK="https://github.com/${{ github.repository }}/commits/${TAG_NAME}"
          else
            COMMITS=$(git log "$PREVIOUS_TAG..$TAG_NAME" --no-merges --pretty=format:"%s (%h)" | grep -v '^Revert ')
            COMMIT_HISTORY_LINK="https://github.com/${{ github.repository }}/compare/${PREVIOUS_TAG}...${TAG_NAME}"
          fi

          FEATURES=""
          TESTS=""
          CI=""
          DOCS=""
          FIXES=""
          OTHER=""

          while IFS= read -r line; do
            if [[ "$line" =~ ^(feat|ci|test|tests|perf|build|fix|refactor|chore|style|docs|doc):\ (.+)\ \((.+)\)$ ]]; then
              TYPE="${BASH_REMATCH[1]}"
              DESC="${BASH_REMATCH[2]}"
              HASH="${BASH_REMATCH[3]}"
              LINK="https://github.com/${{ github.repository }}/commit/${HASH}"

              case "$TYPE" in
                feat)
                  FEATURES+="- feat: ${DESC} ([${HASH}](${LINK}))\n"
                  ;;
                test|tests)
                  TESTS+="- test: ${DESC} ([${HASH}](${LINK}))\n"
                  ;;
                docs|doc)
                  DOCS+="- docs: ${DESC} ([${HASH}](${LINK}))\n"
                  ;;
                ci)
                  CI+="- ci: ${DESC} ([${HASH}](${LINK}))\n"
                  ;;
                fix)
                  FIXES+="- fix: ${DESC} ([${HASH}](${LINK}))\n"
                  ;;
                *)
                  OTHER+="- ${TYPE}: ${DESC} ([${HASH}](${LINK}))\n"
                  ;;
              esac
            else
              OTHER+="- ${line}\n"
            fi
          done <<< "$COMMITS"

          RELEASE_NOTES="# Release ${TAG_NAME}\n\n"
          RELEASE_NOTES+="## Features\n${FEATURES:-No new features.}\n"
          RELEASE_NOTES+="## Tests\n${TESTS:-No test changes.}\n"
          RELEASE_NOTES+="## Documentation\n${DOCS:-No documentation changes.}\n"
          RELEASE_NOTES+="## Fixes\n${FIXES:-No fixes added.}\n"
          RELEASE_NOTES+="## Continuous integration (CI)\n${CI:-No CI changes.}\n"
          RELEASE_NOTES+="## Other changes\n${OTHER:-No other changes.}\n"
          RELEASE_NOTES+="## Full commit history\n\nFor a complete list of commits included in this release, please visit the [commit history](${COMMIT_HISTORY_LINK})."

          echo -e "$RELEASE_NOTES" > release_notes.md
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo -e "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          gh release create "$TAG_NAME" \
            --title "$TAG_NAME" \
            --notes-file release_notes.md \
            --target main